{"version":3,"sources":["components/Calc.js","components/ResultRow.js","components/ResultTable.js","components/Message.js","redux/actions/gamesActions.js","redux/actions/playersActions.js","pages/Home.js","components/PlayerImage.js","components/NewPlayer.js","components/PlayerCard.js","pages/Players.js","components/Temp.js","pages/NotFound.js","App.js","redux/reducers/gamesReducer.js","redux/reducers/playersReducer.js","redux/reducers/rootReducer.js","index.js"],"names":["randomNumber","min","max","Math","floor","random","getColor","number","formatter","Intl","NumberFormat","style","currency","ResultRow","user","className","winner","playerId","username","format","previousCash","bet","betColor","lostOrProfit","ResultTable","game","length","index","winnerColor","toLowerCase","players","map","player","_id","message","icon","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","fire","title","host","gamesActions","getGames","dispatch","a","axios","get","response","data","success","Error","type","payload","newGameReq","createNewGame","newGame","post","getWeather","playersActions","getPlayers","createPlayer","newPlayer","error","deletePlayer","id","delete","editPlayer","newData","put","addCash","mapDispatchToProps","connect","state","games","chosenPlayers","cleanGame","useState","start","setStart","conservativeBet","setConservativeBet","setNewGame","fetchWeather","status","tomorrowTemp","DailyForecasts","Temperature","Maximum","Value","afterTomorrowTemp","useEffect","document","window","scrollTo","betCash","cash","round","newCash","push","createGame","to","onClick","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","updateUsers","messageToShow","reverse","PlayerImage","nameClass","picture","setNewPlayer","editMode","image","includes","backgroundImage","setModal","playerData","inputHandler","e","target","name","value","addUser","editUser","Object","keys","src","alt","htmlFor","onChange","defaultValue","disabled","modal","deleteUser","action","active","time","setTime","formattedTime","Date","toISOString","substr","setTimeout","NotFound","width","marginBottom","props","loader","setLoader","getData","exact","path","component","Home","Players","gamesReducer","playersReducer","filter","rootReducer","combineReducers","myStore","createStore","applyMiddleware","thunk","ReactDOM","render","store","getElementById"],"mappings":"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","file":"static/js/main.7f92df8d.chunk.js","sourcesContent":["export const randomNumber = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min)\r\n}\r\n\r\nexport const getColor = () => {\r\n    let number = randomNumber(1, 100)\r\n    let chosenColor = ''\r\n    if (number <= 2) {\r\n        chosenColor = 'Verde'\r\n    } else if (number <= 51) {\r\n        chosenColor = 'Rojo'\r\n    } else {\r\n        chosenColor = 'Negro'\r\n    }\r\n    return chosenColor\r\n}\r\n\r\nexport const formatter = new Intl.NumberFormat('es-CL', {\r\n    style: 'currency',\r\n    currency: 'CLP',\r\n})","import { formatter } from \"./Calc\"\r\n\r\nconst ResultRow = ({ user }) => {\r\n    return (\r\n        <tr className={user.winner ? \"winnerRow\" : \"looserRow\"}>\r\n            <td>{user?.playerId?.username || 'Usuario eliminado'}</td>\r\n            <td>{formatter.format(user.previousCash)}</td>\r\n            <td>{formatter.format(user.bet)}</td>\r\n            <td>{user.betColor}</td>\r\n            <td>{user.winner ? \"Ganador\" : \"Perdedor\"}</td>\r\n            <td>{formatter.format(user.lostOrProfit)}</td>\r\n            <td>{formatter.format(user.previousCash + user.lostOrProfit)}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\n\r\nexport default ResultRow","import ResultRow from \"./ResultRow\"\r\n\r\nconst ResultTable = ({ game, length, index }) => {\r\n    return (\r\n        <div className=\"gameResultContainer\">\r\n            {index === 0 && <h2>Última Ronda</h2>}\r\n            <div className=\"tableHeader\">\r\n                <h2>Color Ganador: <span className={`${game.winnerColor.toLowerCase()}`}>{game.winnerColor}</span></h2>\r\n                <h2>Juego N° {length - index}</h2>\r\n            </div>\r\n            <table className=\"tableResult\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Jugador</th>\r\n                        <th>Dinero antes de apuesta</th>\r\n                        <th>Dinero apostado</th>\r\n                        <th>Color apuesta</th>\r\n                        <th>¿Gana?</th>\r\n                        <th>Ganancia / Pérdida</th>\r\n                        <th>Dinero Actual</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {game.players.map(player => <ResultRow key={player._id} user={player} />)}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultTable","import Swal from 'sweetalert2'\r\n\r\nexport const message = (icon, message) => {\r\n    const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: 'top-end',\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        timerProgressBar: true,\r\n        didOpen: (toast) => {\r\n            toast.addEventListener('mouseenter', Swal.stopTimer)\r\n            toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n        }\r\n    })\r\n    Toast.fire({\r\n        icon: icon,\r\n        title: message\r\n    })\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst host = 'https://ruletapp-dansep.herokuapp.com'\r\n\r\nconst gamesActions = {\r\n  getGames: () => {\r\n    return async (dispatch) => {\r\n      let response = await axios.get(`${host}/api/games`);\r\n      if (!response.data.success) {\r\n        throw new Error(\"Ocurrió un problema. Intente más tarde.\");\r\n      }\r\n      dispatch({ type: \"GET_GAMES\", payload: response.data.response });\r\n    };\r\n  },\r\n  newGameReq: () => {\r\n    return (dispatch) => {\r\n      dispatch({ type: \"NEW_GAME_REQ\" })\r\n    }\r\n  },\r\n  createNewGame: (newGame) => {\r\n    return async (dispatch) => {\r\n      let response = await axios.post(`${host}/api/games`, newGame)\r\n      if (!response.data.success) {\r\n        throw new Error(\"Ocurrió un problema. Intente más tarde.\");\r\n      }\r\n      dispatch({ type: \"CREATE_GAME\", payload: response.data.response.game })\r\n      dispatch({ type: \"GET_PLAYERS\", payload: response.data.response.players })\r\n      return response\r\n    }\r\n  },\r\n  getWeather: () => {\r\n    return async () => {\r\n      let response = await axios.get(`http://dataservice.accuweather.com/forecasts/v1/daily/5day/60449?apikey=14A2YVwlmMm7UGT4emqoLMAVtejUAvzZ&details=false`)\r\n      return response\r\n    }\r\n  },\r\n}\r\n\r\nexport default gamesActions;\r\n","import axios from \"axios\";\r\n\r\nconst host = 'https://ruletapp-dansep.herokuapp.com'\r\n\r\nconst playersActions = {\r\n    getPlayers: () => {\r\n        return async (dispatch) => {\r\n            let response = await axios.get(`${host}/api/users`);\r\n            if (!response.data.success) {\r\n                throw new Error(\"Ocurrió un problema. Intente más tarde.\");\r\n            }\r\n            dispatch({ type: \"GET_PLAYERS\", payload: response.data.response });\r\n        };\r\n    },\r\n    createPlayer: (newPlayer) => {\r\n        return async (dispatch) => {\r\n            let response = await axios.post(`${host}/api/users`, newPlayer)\r\n            if (!response.data.success) {\r\n                throw new Error(response.data.error);\r\n            }\r\n            dispatch({ type: \"CREATE_PLAYER\", payload: response.data.response })\r\n            return response\r\n        }\r\n    },\r\n    deletePlayer: (id) => {\r\n        return async (dispatch) => {\r\n            let response = await axios.delete(`${host}/api/user/${id}`)\r\n            if (!response.data.success) {\r\n                throw new Error(response.data.error);\r\n            }\r\n            dispatch({ type: \"DELETE_PLAYER\", payload: id })\r\n            return response\r\n        }\r\n    },\r\n    editPlayer: (id, newData, type) => {\r\n        return async (dispatch) => {\r\n            let response = await axios.put(`${host}/api/user/${id}`, newData)\r\n            if (!response.data.success) {\r\n                throw new Error(response.data.error);\r\n            }\r\n            if (type) {\r\n                dispatch({ type: \"CHANGE_DATA\", payload: { id, user: response.data.response } })\r\n            } else {\r\n                dispatch({ type: \"EDIT_PLAYER\", payload: { id, newData, user: response.data.response } })\r\n            }\r\n            return response\r\n        }\r\n    },\r\n    addCash: () => {\r\n        return async (dispatch) => {\r\n            let response = await axios.put(`${host}/api/users`)\r\n            if (!response.data.success) {\r\n                throw new Error(response.data.error)\r\n            }\r\n            dispatch({ type: \"GET_PLAYERS\", payload: response.data.response })\r\n            return response\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default playersActions;\r\n","import { useEffect, useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport ResultTable from \"../components/ResultTable\"\r\nimport { message } from \"../components/Message\"\r\nimport { connect } from \"react-redux\"\r\nimport gamesActions from \"../redux/actions/gamesActions\"\r\nimport { randomNumber, getColor } from \"../components/Calc\"\r\nimport { MdPerson } from 'react-icons/md'\r\nimport { IoMdMoon } from 'react-icons/io'\r\nimport playersActions from \"../redux/actions/playersActions\"\r\nimport Swal from \"sweetalert2\"\r\n\r\nconst Home = ({ games, newGameReq, createNewGame, getWeather, chosenPlayers, cleanGame, addCash }) => {\r\n    const [start, setStart] = useState(false)\r\n    const [conservativeBet, setConservativeBet] = useState(false)\r\n    const [newGame, setNewGame] = useState({\r\n        players: [],\r\n        winnerColor: ''\r\n    })\r\n\r\n    const fetchWeather = async () => {\r\n        try {\r\n            let response = await getWeather()\r\n            if (response.status === 200) {\r\n                let tomorrowTemp = (response.data.DailyForecasts[2].Temperature.Maximum.Value - 32) / 1.8\r\n                let afterTomorrowTemp = (response.data.DailyForecasts[3].Temperature.Maximum.Value - 32) / 1.8\r\n                if (tomorrowTemp > 20 && afterTomorrowTemp > 20) {\r\n                    setConservativeBet(true)\r\n                } else {\r\n                    setConservativeBet(false)\r\n                }\r\n            } else {\r\n                throw new Error('Problemas para obtener el clima. Intente más tarde.')\r\n            }\r\n        } catch (error) {\r\n            message('error', error.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.title = \"RuletApp - Inicio\"\r\n        window.scrollTo(0, 0)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    const bet = (winnerColor) => {\r\n        let players = []\r\n        chosenPlayers.map(user => {\r\n            let betCash = user.cash > 1000 ? conservativeBet ? randomNumber(3, 7) : randomNumber(8, 15) : 100\r\n            betCash = Math.round(betCash * user.cash / 100)\r\n            let betColor = getColor()\r\n            let winner = betColor === winnerColor ? true : false\r\n            let lostOrProfit\r\n            if (winnerColor === \"Verde\" && winner) {\r\n                lostOrProfit = betCash * 15\r\n            } else if (winner) {\r\n                lostOrProfit = betCash * 2\r\n            } else {\r\n                lostOrProfit = -1 * betCash\r\n            }\r\n            let data = {\r\n                playerId: user._id,\r\n                betColor,\r\n                previousCash: user.cash,\r\n                bet: betCash,\r\n                winner,\r\n                lostOrProfit,\r\n                newCash: user.cash + lostOrProfit\r\n            }\r\n            players.push(data)\r\n            return true\r\n        })\r\n        setNewGame({\r\n            winnerColor,\r\n            players\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setNewGame({ players: [], winnerColor: '' })\r\n        fetchWeather()\r\n        let chosenColor = getColor()\r\n        bet(chosenColor)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [chosenPlayers, cleanGame])\r\n\r\n    const createGame = async () => {\r\n        try {\r\n            let response = await createNewGame(newGame)\r\n            if (response.data.success) {\r\n                message('success', 'Partida guardada.')\r\n            } else {\r\n                message('error', response.data.error)\r\n            }\r\n        } catch (error) {\r\n            message('error', error.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (start) {\r\n            createGame()\r\n        } else {\r\n            setStart(true)\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [newGameReq])\r\n\r\n    const confirmation = () => {\r\n        Swal.fire({\r\n            title: '¿Desea finalizar el día?',\r\n            text: \"Todos los jugadores recibirán $10.000\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Confirmar',\r\n            cancelButtonText: 'Cancelar'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                const updateUsers = async () => {\r\n                    try {\r\n                        let response = await addCash()\r\n                        let messageToShow\r\n                        if (response.data.success) {\r\n                            messageToShow = ['Completado', 'Todos los jugadores recibieron $10.000', 'success']\r\n                        } else {\r\n                            messageToShow = ['Ocurrió un problema', 'Intente más tarde', 'error']\r\n                        }\r\n                        Swal.fire(messageToShow[0], messageToShow[1], messageToShow[2])\r\n                    } catch (error) {\r\n                        Swal.fire('Ocurrió un problema', 'Intente más tarde', 'error')\r\n                    }\r\n                }\r\n                updateUsers()\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <main className=\"mainContainer\">\r\n            <div className=\"buttonSection\">\r\n                <Link to='/jugadores' className=\"startButton\"><span className=\"buttonContent\"><MdPerson /> Ver jugadores</span></Link>\r\n                <span className=\"buttonContent startButton\" onClick={confirmation}><IoMdMoon /> Finalizar Día</span>\r\n            </div>\r\n            <h1 className=\"results\">Resultados</h1>\r\n            {[...games].reverse().map((game, index) => <ResultTable key={game._id} game={game} length={games.length} index={index} />)}\r\n        </main>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        games: state.games.games,\r\n        newGameReq: state.games.newGameReq,\r\n        players: state.players.players,\r\n        chosenPlayers: state.players.chosenPlayers,\r\n        cleanGame: state.games.cleanGame,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    createNewGame: gamesActions.createNewGame,\r\n    getWeather: gamesActions.getWeather,\r\n    addCash: playersActions.addCash\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","const PlayerImage = ({ picture, player, setNewPlayer, editMode, user }) => {\r\n    const handler = () => {\r\n        setNewPlayer({\r\n            ...player,\r\n            image: `/assets/${picture}.png`\r\n        })\r\n    }\r\n\r\n    let nameClass\r\n    if ((editMode && user?.image.includes(picture)) || player?.image?.includes(picture)) {\r\n        nameClass = \"picture selected\"\r\n    } else {\r\n        nameClass = \"picture\"\r\n    }\r\n\r\n    return (\r\n        <div onClick={handler} className={nameClass} style={{ backgroundImage: `url('/assets/${picture}.png')` }}></div>\r\n    )\r\n}\r\n\r\nexport default PlayerImage","import { useState } from 'react'\r\nimport PlayerImage from './PlayerImage'\r\nimport { message } from './Message'\r\nimport { connect } from 'react-redux'\r\nimport playersActions from '../redux/actions/playersActions'\r\nimport { formatter } from './Calc'\r\n\r\nconst NewPlayer = ({ setModal, createPlayer, editMode, playerData, editPlayer }) => {\r\n    const [newPlayer, setNewPlayer] = useState({})\r\n\r\n    const pictures = [\"avatar1\", \"avatar2\", \"avatar3\", \"avatar4\", \"avatar5\", \"avatar6\"]\r\n\r\n    const inputHandler = (e) => {\r\n        setNewPlayer({\r\n            ...newPlayer,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const addUser = async () => {\r\n        try {\r\n            if (!newPlayer.username) throw new Error('Ingrese su nombre de usuario.')\r\n            if (!newPlayer.image) throw new Error('Seleccione una imagen.')\r\n            let response = await createPlayer(newPlayer)\r\n            if (response.data.success) {\r\n                message('success', 'Jugador creado exitosamente')\r\n                setModal(false)\r\n            } else {\r\n                message('error', response.data.error)\r\n            }\r\n        } catch (error) {\r\n            message('error', error.message)\r\n        }\r\n    }\r\n\r\n    const editUser = async () => {\r\n        if (!Object.keys(newPlayer).length) {\r\n            message('info', 'No tienes cambios para guardar')\r\n        } else {\r\n            try {\r\n                let response = await editPlayer(playerData._id, newPlayer, 'form')\r\n                if (response.data.success) {\r\n                    message('success', 'Cambios guardados.')\r\n                } else {\r\n                    message('error', response.data.error)\r\n                }\r\n            } catch (error) {\r\n                message('error', error.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"newPlayer\">\r\n            <div className=\"modal\">\r\n                <img className=\"closeIcon\" src=\"/assets/close.png\" alt=\"Close Icon\" onClick={() => setModal(false)} />\r\n                <h2>Seleccione un avatar</h2>\r\n                <div className=\"picturesContainer\">\r\n                    {pictures.map(picture => <PlayerImage key={picture} picture={picture} player={newPlayer} setNewPlayer={setNewPlayer} editMode user={playerData} />)}\r\n                </div>\r\n                <label htmlFor=\"username\">Nombre de Usuario</label>\r\n                <input id=\"username\" name=\"username\" onChange={inputHandler} defaultValue={editMode && playerData.username} />\r\n                <label htmlFor=\"cash\">{editMode ? 'Dinero Actual' : 'Dinero Inicial'}</label>\r\n                <input id=\"cash\" name=\"cash\" disabled={editMode ? false : true} defaultValue={editMode ? playerData.cash : formatter.format(10000)} onChange={inputHandler} />\r\n                <div className=\"startButton\" onClick={editMode ? () => editUser() : () => addUser()}>{editMode ? 'Guardar cambios' : 'Crear Usuario'}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    createPlayer: playersActions.createPlayer,\r\n    editPlayer: playersActions.editPlayer\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(NewPlayer)","import Swal from 'sweetalert2'\r\nimport { MdDelete, MdModeEditOutline, MdCheckCircleOutline, MdCheckCircle } from 'react-icons/md';\r\nimport { useState } from 'react'\r\nimport { message } from './Message';\r\nimport { connect } from 'react-redux';\r\nimport playersActions from '../redux/actions/playersActions';\r\nimport NewPlayer from './NewPlayer';\r\nimport { formatter } from './Calc';\r\n\r\nconst PlayerCard = ({ player, deletePlayer, editPlayer }) => {\r\n    const [modal, setModal] = useState(false)\r\n\r\n    const deleteUser = async () => {\r\n        try {\r\n            await deletePlayer(player._id)\r\n        } catch (error) {\r\n            message('error', error.message)\r\n        }\r\n    }\r\n\r\n    const confirmation = () => {\r\n        Swal.fire({\r\n            title: '¿Estás seguro?',\r\n            text: \"Esta acción no se puede revertir\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Borrar',\r\n            cancelButtonText: 'Cancelar'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                deleteUser()\r\n                Swal.fire(\r\n                    'Eliminado',\r\n                    `Se ha eliminado a ${player.username}`,\r\n                    'success'\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    const editUser = (action) => {\r\n        if (player.cash === 0) return Swal.fire(\r\n            'No se puede realizar esta acción.',\r\n            'El usuario debe tener un saldo mayor a $0 para poder jugar.',\r\n            'warning'\r\n        )\r\n        if (action === \"remove\") {\r\n            editPlayer(player._id, { active: false })\r\n        } else {\r\n            editPlayer(player._id, { active: true })\r\n        }\r\n    }\r\n\r\n    const nameClass = player.active ? \"card selectedCard\" : \"card\"\r\n\r\n    return (\r\n        <div className={nameClass}>\r\n            {player.active\r\n                ? <MdCheckCircle className=\"selectedTrue\" onClick={() => editUser('remove')} />\r\n                : <MdCheckCircleOutline className=\"selectedIcon\" onClick={() => editUser('add')} />\r\n            }\r\n            <div className=\"picture\" style={{ backgroundImage: `url('${player.image}')` }}></div>\r\n            <h3>Nombre</h3>\r\n            <h4>{player.username}</h4>\r\n            <h3>Dinero</h3>\r\n            <h4>{formatter.format(player.cash)}</h4>\r\n            <div className=\"icons\">\r\n                <MdModeEditOutline className=\"editIcon\" onClick={() => setModal(true)} />\r\n                <MdDelete className=\"deleteIcon\" onClick={confirmation} />\r\n            </div>\r\n            {modal && <NewPlayer setModal={setModal} editMode playerData={player} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    deletePlayer: playersActions.deletePlayer,\r\n    editPlayer: playersActions.editPlayer\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(PlayerCard)","import { Link } from 'react-router-dom'\r\nimport { useState, useEffect } from 'react'\r\nimport NewPlayer from '../components/NewPlayer'\r\nimport PlayerCard from '../components/PlayerCard'\r\nimport { MdAddCircleOutline, MdHome } from 'react-icons/md';\r\nimport { connect } from 'react-redux'\r\n\r\nconst Players = ({ players, chosenPlayers }) => {\r\n    const [modal, setModal] = useState(false)\r\n\r\n    useEffect(() => {\r\n        document.title = \"RuletApp - Jugadores\"\r\n        window.scrollTo(0, 0)\r\n    }, [])\r\n\r\n    return (\r\n        <section className=\"playersSection\">\r\n            <Link to='/' className=\"startButton\"><span className=\"buttonContent\"><MdHome /> Inicio</span></Link>\r\n            <h1>Seleccionar jugadores ({chosenPlayers.length})</h1>\r\n            <div className=\"playersContainer\">\r\n                <div className=\"card\">\r\n                    <MdAddCircleOutline className=\"plusIcon\" onClick={() => setModal(true)} />\r\n                </div>\r\n                {[...players].reverse().map(player => <PlayerCard key={player._id} player={player} />)}\r\n                {modal && <NewPlayer setModal={setModal} />}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        players: state.players.players,\r\n        chosenPlayers: state.players.chosenPlayers\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Players)","import { useState, useEffect } from 'react'\r\nimport gamesActions from '../redux/actions/gamesActions'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Temp = ({ newGameReq }) => {\r\n    const [time, setTime] = useState(180)\r\n    let formattedTime = new Date(time * 1000).toISOString().substr(14, 5)\r\n\r\n    setTimeout(() => {\r\n        if (time === 0) {\r\n            setTime(180)\r\n        } else {\r\n            setTime(time - 1)\r\n        }\r\n    }, 1000)\r\n\r\n    useEffect(() => {\r\n        if (time === 0) {\r\n            newGameReq()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [time])\r\n\r\n    return (\r\n        <div className=\"temp\">\r\n            <h1>Próxima ronda dentro de {formattedTime}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    newGameReq: gamesActions.newGameReq\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Temp)","import { Link } from \"react-router-dom\"\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div className=\"notFound\">\r\n            <img src='/assets/lost.png' alt='' style={{ width: '30%' }} />\r\n            <h2 style={{ marginBottom: '2vh' }}>Esta página no existe.</h2>\r\n            <Link to=\"/\" className=\"startButton\">Volver a Inicio</Link>\r\n        </div>\r\n    )\r\n}\r\nexport default NotFound","import \"./App.css\";\nimport Home from './pages/Home'\nimport Players from './pages/Players'\nimport Temp from \"./components/Temp\";\nimport NotFound from \"./pages/NotFound\";\nimport { message } from \"./components/Message\";\nimport { useEffect, useState } from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport gamesActions from \"./redux/actions/gamesActions\";\nimport playersActions from \"./redux/actions/playersActions\";\n\nconst App = (props) => {\n  const [loader, setLoader] = useState(true)\n\n  const getData = async () => {\n    try {\n      await props.getGames()\n      await props.getPlayers()\n      setLoader(false)\n    } catch (error) {\n      message('error', error.message)\n    }\n  }\n\n  useEffect(() => {\n    getData()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  if (loader) {\n    return (\n      <div className=\"loader\">\n        <img className=\"loaderImage\" src='/assets/ruleta.png' alt=\"Ruleta\" />\n        <h1>Iniciando aplicación...</h1>\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <Temp />\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/jugadores\" component={Players} />\n          <Route path=\"/notfound\" component={NotFound} />\n          <Redirect to=\"/notfound\" />\n        </Switch>\n      </BrowserRouter>\n    </>\n  );\n};\n\nconst mapDispatchToProps = {\n  getGames: gamesActions.getGames,\n  getPlayers: playersActions.getPlayers\n}\n\nexport default connect(null, mapDispatchToProps)(App);\n","const gamesReducer = (\r\n    state = { games: [], newGameReq: true, cleanGame: false },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case \"GET_GAMES\":\r\n            return {\r\n                ...state,\r\n                games: action.payload,\r\n            };\r\n        case \"NEW_GAME_REQ\":\r\n            return {\r\n                ...state,\r\n                newGameReq: !state.newGameReq,\r\n            };\r\n        case \"CREATE_GAME\":\r\n            return {\r\n                ...state,\r\n                games: [...state.games, action.payload],\r\n                cleanGame: !state.cleanGame\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default gamesReducer;\r\n","const playersReducer = (\r\n    state = { players: [], chosenPlayers: [] },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case \"GET_PLAYERS\":\r\n            return {\r\n                ...state,\r\n                players: action.payload,\r\n                chosenPlayers: action.payload.filter(player => player.active),\r\n            };\r\n        case \"CREATE_PLAYER\":\r\n            return {\r\n                ...state,\r\n                players: [...state.players, action.payload],\r\n                chosenPlayers: [...state.chosenPlayers, action.payload]\r\n            };\r\n        case \"DELETE_PLAYER\":\r\n            return {\r\n                ...state,\r\n                players: state.players.filter(player => player._id !== action.payload),\r\n                chosenPlayers: state.chosenPlayers.filter(player => player._id !== action.payload)\r\n            };\r\n        case \"EDIT_PLAYER\":\r\n            return {\r\n                ...state,\r\n                players: state.players.map(player => {\r\n                    let result\r\n                    if (player._id === action.payload.id) {\r\n                        result = { ...player, active: action.payload.newData.active }\r\n                    } else {\r\n                        result = player\r\n                    }\r\n                    return result\r\n                }),\r\n                chosenPlayers: action.payload.newData.active\r\n                    ? [...state.chosenPlayers, action.payload.user]\r\n                    : state.chosenPlayers.filter(player => player._id !== action.payload.id)\r\n            };\r\n        case \"CHANGE_DATA\":\r\n            return {\r\n                ...state,\r\n                players: state.players.map(player => {\r\n                    let result\r\n                    if (player._id === action.payload.id) {\r\n                        result = action.payload.user\r\n                    } else {\r\n                        result = player\r\n                    }\r\n                    return result\r\n                })\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default playersReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport gamesReducer from \"./gamesReducer\";\r\nimport playersReducer from \"./playersReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    games: gamesReducer,\r\n    players: playersReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { applyMiddleware, createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from './redux/reducers/rootReducer';\nimport thunk from \"redux-thunk\";\n\nconst myStore = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={myStore}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n)"],"sourceRoot":""}